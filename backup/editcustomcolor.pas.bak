unit editCustomColor;

{$mode ObjFPC}{$H+}

interface

uses
  Classes, SysUtils, LResources, Forms, Controls, Graphics, Dialogs, StdCtrls;

type

  { TeditCustomColor }

  TeditCustomColor = class(TEdit)
  private
    CorInicial: TColor;
    FMudarColor: TColor;
    FCampoObrigatorio: Boolean;
    FMensagem: String;
    procedure SetMudarCor(const Value: TColor);
    procedure SetCampoObrigatorio(const Value: Boolean);
    procedure SetMensagem(const Value: String);

  protected
    procedure DoEnter; override;
    procedure DoExit; override;

  public
    constructor Create(AOwner: TComponent); override;

  published
    property MudarColor: TColor read FMudarColor write SetMudarCor;
    property Mensagem : String read FMensagem write SetMensagem;
    property CampoObrigatorio: Boolean read FCampoObrigatorio write SetCampoObrigatorio;

  end;

procedure Register;

implementation

procedure Register;
begin
  RegisterComponents('Standard',[TeditCustomColor]);
end;

{ TeditCustomColor }

procedure TeditCustomColor.SetMudarCor(const Value: TColor);
begin
  FMudarColor := Value;
end;

procedure TeditCustomColor.SetCampoObrigatorio(const Value: Boolean);
begin
   FCampoObrigatorio := Value;
end;

procedure TeditCustomColor.SetMensagem(const Value: String);
begin
  FMensagem := Value;
end;

procedure TeditCustomColor.DoEnter;
begin
  inherited;
  CorInicial := Color;
  Color := FMudarColor;
end;

procedure TeditCustomColor.DoExit;
begin
  inherited;
    Color := CorInicial;
end;

constructor TeditCustomColor.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
  FMudarColor    := $00D6F4FE;
end;

end.
